; Configure Setup
; ---------------
; Author: Henrik Noerfjand Stengaard
; Date: 2017-12-19
;
; This script configures setup of hardware, devices, boot sequence and whdload.
; Hardware menu contains configuration of accelerator cards Blizzard, ACA, Furia. It also has options for CPU, FPU and OS patches.
; Device & Library menu contains configuration of scsi.device, icon.library and select scsi.device.
; Boot Sequence menu contains configuration of Amiga Boot Selector, Arcade Game Selector 2 for Games and Arcade Game Selector 2 for Demos. 
; WHDLoad menu contains configuration of WHDLoad quit key.


; Delete "First-Boot" file, if it exists
IF EXISTS SYS:Prefs/HstWB/First-Boot
  delete >NIL: SYS:Prefs/HstWB/First-Boot
ENDIF


; Main Menu
; ---------
LAB mainmenu

echo "Hardware" >T:mainmenu
echo "Device & Library" >>T:mainmenu
echo "Boot Sequence" >>T:mainmenu
echo "WHDLoad" >>T:mainmenu
echo "Reset setup" >>T:mainmenu
echo "Quit" >>T:mainmenu

; Show main menu
set mainmenu ""
set mainmenu `RequestList TITLE="Configure Setup" LISTFILE="T:mainmenu" WIDTH=320 LINES=12`
delete >NIL: T:mainmenu

; Hardware
IF $mainmenu eq "1" 
	SKIP hardwaremenu
ENDIF 

; Device
IF $mainmenu eq "2" 
	SKIP devicelibrarymenu
ENDIF 

; Boot Sequence
IF $mainmenu eq "3" 
	SKIP bootsequencemenu
ENDIF 

; WHDLoad
IF $mainmenu eq "4" 
	SKIP whdloadmenu
ENDIF 

; Reset setup
IF $mainmenu eq "5" 
	execute SYS:Programs/Configuration/Reset-Setup
ENDIF 

; Quit
IF $mainmenu eq "6"
	SKIP end
ENDIF 

SKIP BACK mainmenu


; Hardware Menu
; -------------
LAB hardwaremenu

echo "Use Blizzard:       " NOLINE >T:hardwaremenu
IF EXISTS SYS:Prefs/HstWB/Use-Blizzard
	echo "Yes" NOLINE >>T:hardwaremenu
	IF EXISTS SYS:Prefs/HstWB/MapRom-Blizzard-A1200-KS31
		echo ", Map KS31" NOLINE >>T:hardwaremenu
	EndIF
	echo "" >>T:hardwaremenu
Else
	echo "No" >>T:hardwaremenu
EndIF

echo "Use ACA:            " NOLINE >>T:hardwaremenu
IF EXISTS SYS:Prefs/HstWB/Use-ACA
	echo "Yes" NOLINE >>T:hardwaremenu
	IF EXISTS SYS:Prefs/HstWB/MapRom-ACA-A600-KS31
		echo ", Map KS31" NOLINE >>T:hardwaremenu
	EndIF
	IF EXISTS SYS:Prefs/HstWB/MapRom-ACA-A1200-KS31
		echo ", Map KS31" NOLINE >>T:hardwaremenu
	EndIF
	echo "" >>T:hardwaremenu
Else
	echo "No" >>T:hardwaremenu
EndIF

echo "Use Furia:          " NOLINE >>T:hardwaremenu
IF EXISTS SYS:Prefs/HstWB/Use-Furia
	echo "Yes" NOLINE >>T:hardwaremenu
	IF EXISTS SYS:Prefs/HstWB/MapRom-Furia-A600-KS31
		echo ", Map KS31" NOLINE >>T:hardwaremenu
	EndIF
	echo "" >>T:hardwaremenu
Else
	echo "No" >>T:hardwaremenu
EndIF

echo "Use 020+ CPU:       " NOLINE >>T:hardwaremenu
IF EXISTS SYS:Prefs/HstWB/Use-020
	echo "Yes" >>T:hardwaremenu
Else
	echo "No" >>T:hardwaremenu
EndIF

echo "Use FPU:            " NOLINE >>T:hardwaremenu
IF EXISTS SYS:Prefs/HstWB/Use-FPU
	echo "Yes" >>T:hardwaremenu
Else
	echo "No" >>T:hardwaremenu
EndIF

echo "Use OS patches:     " NOLINE >>T:hardwaremenu
IF EXISTS SYS:Prefs/HstWB/Use-OS-Patches
	echo "Yes" >>T:hardwaremenu
Else
	echo "No" >>T:hardwaremenu
EndIF

echo "Back" >>T:hardwaremenu

; Show hardware menu
set hardwaremenu ""
set hardwaremenu `RequestList TITLE="Hardware" LISTFILE="T:hardwaremenu" WIDTH=320 LINES=12`
delete >NIL: T:hardwaremenu

; Switch Use Blizzard
IF $hardwaremenu eq "1" 
	SKIP blizzard
ENDIF 

; Switch Use ACA
IF $hardwaremenu eq "2" 
	SKIP aca
ENDIF 

; Switch Use Furia
IF $hardwaremenu eq "3" 
	SKIP furia
ENDIF 

; Switch Use 020+ CPU
IF $hardwaremenu eq "4" 
	SKIP cpu
ENDIF 

; Switch Use FPU
IF $hardwaremenu eq "5" 
	SKIP fpu
ENDIF 

; Switch Use OS patches
IF $hardwaremenu eq "6" 
	SKIP ospatches
ENDIF 

SKIP mainmenu back



; Device & Library Menu
; ---------------------
LAB devicelibrarymenu


echo "Load scsi.device:    " NOLINE >T:devicelibrarymenu
IF EXISTS SYS:Prefs/HstWB/Load-ScsiDevice
	echo "Yes" >>T:devicelibrarymenu
Else
	echo "No" >>T:devicelibrarymenu
EndIF

echo "Load icon.library:   " NOLINE >>T:devicelibrarymenu
IF EXISTS SYS:Prefs/HstWB/Load-IconLibrary
	echo "Yes" >>T:devicelibrarymenu
Else
	echo "No" >>T:devicelibrarymenu
EndIF

echo "Select scsi.device" >>T:devicelibrarymenu
echo "Back" >>T:devicelibrarymenu

; Show device & library menu
set devicelibrarymenu ""
set devicelibrarymenu `RequestList TITLE="Device & Library" LISTFILE="T:devicelibrarymenu" WIDTH=320 LINES=12`
delete >NIL: T:devicelibrarymenu

; Switch Load scsi.device
IF $devicelibrarymenu eq "1" 
	SKIP loadscsidevice
ENDIF 

; Switch Load icon.library
IF $devicelibrarymenu eq "2" 
	SKIP loadiconlibrary
ENDIF 

; Select scsi.device
IF $devicelibrarymenu eq "3" 
	SKIP selectscsidevice
ENDIF

SKIP mainmenu back


; Boot Sequence Menu
; ------------------
LAB bootsequencemenu


echo "Start ABS:          " NOLINE >T:bootsequencemenu
IF EXISTS SYS:Prefs/HstWB/Start-ABS
	echo "Yes" >>T:bootsequencemenu
Else
	echo "No" >>T:bootsequencemenu
EndIF

echo "Start Multiboot:    " NOLINE >>T:bootsequencemenu
IF EXISTS SYS:Prefs/HstWB/Start-Multiboot
	echo "Yes" >>T:bootsequencemenu
Else
	echo "No" >>T:bootsequencemenu
EndIF

echo "Start AGS2 Games:   " NOLINE >>T:bootsequencemenu
set ags2games "0"
IF EXISTS "SYS:Prefs/AGS2/AGS2Menus.cfg"
  search "SYS:Prefs/AGS2/AGS2Menus.cfg" "AGS2Games=" >NIL:
  IF $RC EQ 0 VAL
    set ags2games "1"
  ENDIF
ENDIF
IF $ags2games EQ 1 VAL
  IF EXISTS SYS:Prefs/HstWB/Start-AGS2Games
    echo "Yes" >>T:bootsequencemenu
  Else
    echo "No" >>T:bootsequencemenu
  EndIF
Else
  echo "N/A" >>T:bootsequencemenu
EndIF

echo "Start AGS2 Demos:   " NOLINE >>T:bootsequencemenu
set ags2demos "0"
IF EXISTS "SYS:Prefs/AGS2/AGS2Menus.cfg"
  search "SYS:Prefs/AGS2/AGS2Menus.cfg" "AGS2Demos=" >NIL:
  IF $RC EQ 0 VAL
    set ags2demos "1"
  ENDIF
ENDIF
IF $ags2demos EQ 1 VAL
  IF EXISTS SYS:Prefs/HstWB/Start-AGS2Demos
    echo "Yes" >>T:bootsequencemenu
  Else
    echo "No" >>T:bootsequencemenu
  EndIF
Else
  echo "N/A" >>T:bootsequencemenu
EndIF

echo "Back" >>T:bootsequencemenu

; Show boot sequence menu
set bootsequencemenu ""
set bootsequencemenu `RequestList TITLE="Boot Sequence" LISTFILE="T:bootsequencemenu" WIDTH=320 LINES=12`
delete >NIL: T:bootsequencemenu

; Switch Start ABS
IF $bootsequencemenu eq "1"
	SKIP abs
ENDIF 

; Switch Start Multiboot
IF $bootsequencemenu eq "2"
	SKIP multiboot
ENDIF 

; Switch Start AGS2 Games
IF $bootsequencemenu eq "3"
	SKIP ags2games
ENDIF 

; Switch Start AGS2 Demos
IF $bootsequencemenu eq "4"
	SKIP ags2demos
ENDIF 

SKIP mainmenu back


; WHDLoad Menu
; ------------
LAB whdloadmenu

echo "Set Quit Key" >T:whdloadmenu
echo "Back" >>T:whdloadmenu

; Show whdload menu
set whdloadmenu ""
set whdloadmenu `RequestList TITLE="WHDLoad" LISTFILE="T:whdloadmenu" WIDTH=240 LINES=12`
delete >NIL: T:whdloadmenu

; WHDLoad Quit Key
IF $whdloadmenu eq "1" 
	SKIP whdloadquitkey
ENDIF 

SKIP mainmenu back


; Configure Blizzard
; ------------------
LAB blizzard

IF EXISTS SYS:Prefs/HstWB/Use-Blizzard
	delete >NIL: SYS:Prefs/HstWB/Use-Blizzard
	delete >NIL: SYS:Prefs/HstWB/MapRom-Blizzard-A1200-KS31
Else
	echo "" >SYS:Prefs/HstWB/Use-Blizzard

	; Reset ACA and Furia
	delete >NIL: SYS:Prefs/HstWB/Use-ACA
	delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A600-KS31
	delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A1200-KS31
	delete >NIL: SYS:Prefs/HstWB/Use-Furia
	delete >NIL: SYS:Prefs/HstWB/MapRom-Furia-A600-KS31
	
	; Blizzard maprom A1200 Kickstart 3.1
	setenv blizzardmap `RequestChoice "Blizzard Maprom" "Do you want Blizzard to maprom A1200 Kickstart 3.1?" "Yes|No"`
	If $blizzardmap eq "1" 
		echo "" >SYS:Prefs/HstWB/MapRom-Blizzard-A1200-KS31
	Else
		; Delete "MapRom-Blizzard-A1200-KS31" file
		IF EXISTS SYS:Prefs/HstWB/MapRom-Blizzard-A1200-KS31
			delete >NIL: SYS:Prefs/HstWB/MapRom-Blizzard-A1200-KS31
		EndIF
	EndIF
EndIF

SKIP hardwaremenu back


; Configure ACA
LAB aca

IF EXISTS SYS:Prefs/HstWB/Use-ACA
	delete >NIL: SYS:Prefs/HstWB/Use-ACA
	delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A600-KS31
	delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A1200-KS31
Else
	echo "" >SYS:Prefs/HstWB/Use-ACA

	; Reset Blizzard and Furia
	delete >NIL: SYS:Prefs/HstWB/Use-Blizzard
	delete >NIL: SYS:Prefs/HstWB/MapRom-Blizzard-A1200-KS31
	delete >NIL: SYS:Prefs/HstWB/Use-Furia
	delete >NIL: SYS:Prefs/HstWB/MapRom-Furia-A600-KS31

	; ACA maprom A600 Kickstart 3.1
	setenv acamaprom `RequestChoice "ACA Maprom" "Do you want ACA to maprom A600 Kickstart 3.1?" "Yes|No"`
	If $acamaprom eq "1" 
		echo "" >SYS:Prefs/HstWB/MapRom-ACA-A600-KS31
		
		SKIP hardwaremenu back
	Else
		; Delete "MapRom-ACA-A600-KS31" file
		IF EXISTS SYS:Prefs/HstWB/MapRom-ACA-A600-KS31
			delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A600-KS31
		EndIF
	EndIF

	; ACA maprom A1200 Kickstart 3.1
	setenv acamaprom `RequestChoice "ACA Maprom" "Do you want ACA to maprom A1200 Kickstart 3.1?" "Yes|No"`
	If $acamaprom eq "1" 
		echo "" >SYS:Prefs/HstWB/MapRom-ACA-A1200-KS31
	Else
		; Delete "MapRom-ACA-A1200-KS31" file
		IF EXISTS SYS:Prefs/HstWB/MapRom-ACA-A1200-KS31
			delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A1200-KS31
		EndIF
	EndIF
EndIF

SKIP hardwaremenu back


; Configure Furia
; ---------------
LAB furia

IF EXISTS SYS:Prefs/HstWB/Use-Furia
	delete >NIL: SYS:Prefs/HstWB/Use-Furia
	delete >NIL: SYS:Prefs/HstWB/MapRom-Furia-A600-KS31
Else
	echo "" >SYS:Prefs/HstWB/Use-Furia

	; Reset Blizzard and ACA
	delete >NIL: SYS:Prefs/HstWB/Use-Blizzard
	delete >NIL: SYS:Prefs/HstWB/MapRom-Blizzard-A1200-KS31
	delete >NIL: SYS:Prefs/HstWB/Use-ACA
	delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A600-KS31
	delete >NIL: SYS:Prefs/HstWB/MapRom-ACA-A1200-KS31
	
	; Furia maprom A600 Kickstart 3.1
	setenv furiamaprom `RequestChoice "Furia Maprom" "Do you want Furia to maprom A600 Kickstart 3.1?" "Yes|No"`
	If $furiamaprom eq "1" 
		echo "" >SYS:Prefs/HstWB/MapRom-Furia-A600-KS31
	Else
		; Delete "MapRom-Furia-A600-KS31" file
		IF EXISTS SYS:Prefs/HstWB/MapRom-Furia-A600-KS31
			delete >NIL: SYS:Prefs/HstWB/MapRom-Furia-A600-KS31
		EndIF
	EndIF
EndIf

SKIP hardwaremenu back
	

; Configure CPU
; -------------
LAB cpu

IF EXISTS SYS:Prefs/HstWB/Use-020
	delete >NIL: SYS:Prefs/HstWB/Use-020

	Copy >NIL: SYS:Programs/Configuration/KingCON1.3/Handler/KingCON-handler L:KingCon-handler
	Copy >NIL: SYS:Programs/Configuration/iconlib_46.4/icon.library_68000 Libs:icon.library
Else
	echo "" >SYS:Prefs/HstWB/Use-020

	Copy >NIL: SYS:Programs/Configuration/KingCON1.3/Handler/KingCON-handler.020 L:KingCon-handler
	Copy >NIL: SYS:Programs/Configuration/iconlib_46.4/icon.library_68020 Libs:icon.library
EndIF

SKIP hardwaremenu back


; Configure FPU
; -------------
LAB fpu

IF EXISTS SYS:Prefs/HstWB/Use-FPU
	delete >NIL: SYS:Prefs/HstWB/Use-FPU

	Copy >NIL: SYS:Programs/Configuration/guigfx_render_nofpu/ Libs:
Else
	echo "" >SYS:Prefs/HstWB/Use-FPU

	Copy >NIL: SYS:Programs/Configuration/guigfx_render_fpu/ Libs:
EndIF

SKIP hardwaremenu back


; Configure OS Patches
; --------------------
LAB ospatches

IF EXISTS SYS:Prefs/HstWB/Use-OS-Patches
	delete >NIL: SYS:Prefs/HstWB/Use-OS-Patches
Else
	echo "" >SYS:Prefs/HstWB/Use-OS-Patches
EndIF

SKIP hardwaremenu back


; Load scsi.device
; ----------------
LAB loadscsidevice

IF EXISTS SYS:Prefs/HstWB/Load-ScsiDevice
	delete >NIL: SYS:Prefs/HstWB/Load-ScsiDevice
Else
	echo "" >SYS:Prefs/HstWB/Load-ScsiDevice
EndIF

SKIP devicelibrarymenu back


; Load icon.library
; -----------------
LAB loadiconlibrary

IF EXISTS SYS:Prefs/HstWB/Load-IconLibrary
	delete >NIL: SYS:Prefs/HstWB/Load-IconLibrary
Else
	echo "" >SYS:Prefs/HstWB/Load-IconLibrary
EndIF

SKIP devicelibrarymenu back


; Select scsi.device
; ------------------
LAB selectscsidevice

echo "Built-in (Kickstart ROM)" >T:scsidevicemenu
echo "v43.45 Chris/Toni A1200" >>T:scsidevicemenu
echo "v43.46 Cosmos A600/A1200" >>T:scsidevicemenu
echo "v43.47 Cosmos A600/A1200" >>T:scsidevicemenu
echo "v44.20 Doobrey A600" >>T:scsidevicemenu
echo "v44.20 Doobrey A1200" >>T:scsidevicemenu
echo "Back" >>T:scsidevicemenu

; Show select scsi.device menu
set scsidevicemenu ""
set scsidevicemenu `RequestList TITLE="Select scsi.device" LISTFILE="T:scsidevicemenu" WIDTH=320 LINES=12`
delete >NIL: T:scsidevicemenu

; Built-in (Kickstart ROM)
IF $scsidevicemenu eq "1" 
  IF EXISTS devs:scsi.device
    delete >NIL: devs:scsi.device
  ENDIF 
ENDIF 

; v43.45 Chris/Toni A1200
IF $scsidevicemenu eq "2" 
	Copy >NIL: SYS:Programs/Configuration/SCSI_v43_45_ChrisToni/A1200IDE.scsi.device.43.45 DEVS:scsi.device
ENDIF 

; v43.46 Cosmos A600/A1200
IF $scsidevicemenu eq "3" 
	Copy >NIL: SYS:Programs/Configuration/SCSI_v43_47_Cosmos/scsi.device_A600_A1200_43.46 DEVS:scsi.device
ENDIF 

; v43.47 Cosmos A600/A1200
IF $scsidevicemenu eq "4" 
	Copy >NIL: SYS:Programs/Configuration/SCSI_v43_47_Cosmos/scsi.device_A600_A1200_43.47b1 DEVS:scsi.device
ENDIF 

; v44.20 Doobrey A600
IF $scsidevicemenu eq "5" 
	Copy >NIL: SYS:Programs/Configuration/SCSI_v44_20_Doobrey/scsi.device_A600_44.2 DEVS:scsi.device
ENDIF 

; v44.20 Doobrey A1200
IF $scsidevicemenu eq "6" 
	Copy >NIL: SYS:Programs/Configuration/SCSI_v44_20_Doobrey/scsi.device_A1200_44.2 DEVS:scsi.device
ENDIF 

SKIP devicelibrarymenu back


; Configure WHDLoad Quit Key
; --------------------------
LAB whdloadquitkey

; Goto whdload menu, if whdload.prefs doesn't exist
IF NOT EXISTS "S:WHDLoad.prefs"
  REQUESTCHOICE "Error" "WHDLoad.prefs file 'S:WHDLoad.prefs' doesn't exist!" "OK" >NIL:
  SKIP whdloadmenu back
ENDIF

; Disable existing quit key
rep "S:WHDLoad.prefs" "QuitKey" ";QuitKey"

; Select WHDLoad quit key
setenv quitkey `RequestChoice "WHDLoad Quit Key" "Select global quit key for WHDLoad?" "F10|Help|Del|NumL|ScrL|SysRq|PrtSc|Default"`
If $quitkey eq "1" 
	echo "QuitKey=$59" >>S:WHDLoad.prefs
EndIf
If $quitkey eq "2" 
	echo "QuitKey=$5f" >>S:WHDLoad.prefs
EndIf
If $quitkey eq "3" 
	echo "QuitKey=$46" >>S:WHDLoad.prefs
EndIf
If $quitkey eq "4" 
	echo "QuitKey=$5a" >>S:WHDLoad.prefs
EndIf
If $quitkey eq "5" 
	echo "QuitKey=$5b" >>S:WHDLoad.prefs
EndIf
If $quitkey eq "6" 
	echo "QuitKey=$5c" >>S:WHDLoad.prefs
EndIf
If $quitkey eq "7" 
	echo "QuitKey=$5d" >>S:WHDLoad.prefs
EndIf

SKIP whdloadmenu back


; Configure Amiga Boot Selector
; -----------------------------
LAB abs

IF EXISTS SYS:Prefs/HstWB/Start-ABS
	delete >NIL: SYS:Prefs/HstWB/Start-ABS
Else
	echo "" >SYS:Prefs/HstWB/Start-ABS
	delete >NIL: SYS:Prefs/HstWB/Start-Multiboot
	delete >NIL: SYS:Prefs/HstWB/Start-AGS2Games
	delete >NIL: SYS:Prefs/HstWB/Start-AGS2Demos
EndIF

SKIP bootsequencemenu back


; Configure Multiboot
; -------------------
LAB multiboot

IF EXISTS SYS:Prefs/HstWB/Start-Multiboot
	delete >NIL: SYS:Prefs/HstWB/Start-Multiboot
Else
	echo "" >SYS:Prefs/HstWB/Start-Multiboot
	delete >NIL: SYS:Prefs/HstWB/Start-ABS
	delete >NIL: SYS:Prefs/HstWB/Start-AGS2Games
	delete >NIL: SYS:Prefs/HstWB/Start-AGS2Demos
EndIF

SKIP bootsequencemenu back


; Configure AGS2 Games
; --------------------
LAB ags2games

set ags2games "0"
IF EXISTS "SYS:Prefs/AGS2/AGS2Menus.cfg"
  search "SYS:Prefs/AGS2/AGS2Menus.cfg" "AGS2Games=" >NIL:
  IF $RC EQ 0 VAL
    set ags2games "1"
  ENDIF
ENDIF
IF $ags2games EQ 1 VAL
  IF EXISTS SYS:Prefs/HstWB/Start-AGS2Games
    delete >NIL: SYS:Prefs/HstWB/Start-AGS2Games
  ELSE
    echo "" >SYS:Prefs/HstWB/Start-AGS2Games
    delete >NIL: SYS:Prefs/HstWB/Start-Multiboot
    delete >NIL: SYS:Prefs/HstWB/Start-ABS
    delete >NIL: SYS:Prefs/HstWB/Start-AGS2Demos
  ENDIF
ENDIF

SKIP bootsequencemenu back

		
; Configure AGS2 Demos
; --------------------
LAB ags2demos

set ags2demos "0"
IF EXISTS "SYS:Prefs/AGS2/AGS2Menus.cfg"
  search "SYS:Prefs/AGS2/AGS2Menus.cfg" "AGS2Demos=" >NIL:
  IF $RC EQ 0 VAL
    set ags2demos "1"
  ENDIF
ENDIF
IF $ags2demos EQ 1 VAL
  IF EXISTS SYS:Prefs/HstWB/Start-AGS2Demos
    delete >NIL: SYS:Prefs/HstWB/Start-AGS2Demos
  ELSE
    echo "" >SYS:Prefs/HstWB/Start-AGS2Demos
    delete >NIL: SYS:Prefs/HstWB/Start-Multiboot
    delete >NIL: SYS:Prefs/HstWB/Start-ABS
    delete >NIL: SYS:Prefs/HstWB/Start-AGS2Games
  ENDIF
ENDIF

SKIP bootsequencemenu back


; End
LAB end

echo "Configure setup menu can started anytime from Workbench,"
echo "Programs, Configuration."
echo ""
echo "Holding down right mouse button during boot will also"
echo "start Configure setup menu. This is has been added as"
echo "a recovery option allowing setup to be reset or changed,"
echo "if boot sequence or Workbench would result in a crash."
echo ""